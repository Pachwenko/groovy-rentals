name: Django CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'frontend/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'frontend/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: pip install flake8
      - run: flake8 .

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install postgres system packages
        run: sudo apt install postgresql-client -y

      - name: Install poetry
        uses: snok/install-poetry@5e4414407e59f94f2148bcb253917dfc22dee7d9
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ./backend/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('./backend/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - run: poetry run pytest
        env:
          DATABASE_URL: postgres://spooky-rentals:password@localhost/postgres

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: spooky-rentals
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_USER: spooky-rentals
        ports:
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5